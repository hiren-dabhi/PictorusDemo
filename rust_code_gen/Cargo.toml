[package]
name = "rust_code_gen"
version = "0.1.0"
edition = "2021"

[dev-dependencies]
approx = "0.5.1"
mockall = "0.11.4"
pretty_assertions = "1.2.1"
protocols = { path = "../protocols", features = [ "test-utils",] }
rstest = "0.23"

[dependencies]
utils = { path = "../utils" }
corelib-traits = { path = "../corelib-traits" }
protocols = { path = "../protocols", default-features = false }
cfg-if = "1.0.0"
embedded-hal-02 = { package = "embedded-hal", version = "0.2.7", features = [ "unproven",] }
embedded-hal = "1.0.0"
embedded-time = "0.12.1"
embedded-can = "0.4.1"
embedded-io = "0.6.1"
num-traits = { version = "0.2.18", default-features = false, features = [ "libm",] }
log = "0.4.21"
miniserde = { version = "0.1.30", default-features = false, features = [] }
nalgebra = { version = "0.32.3", default-features = false, features = [ "alloc", "libm",] }
strum = { version = "0.25.0", default-features = false, features = [ "derive",] }
byteorder = { version = "1.4.3", default-features = false }
hex = { version = "0.4.3", default-features = false, features = [ "alloc",] }
chrono = { version = "0.4.31", optional = true }
env_logger = { version = "0.9.0", optional = true }
rand = { version = "0.8.4", optional = true }
rand_distr = { version = "0.4.2", optional = true }
rustfft = { version = "6.1.0", optional = true }

[features]
default = [ "std",]
std = [ "byteorder/std", "nalgebra/std", "miniserde/std", "chrono", "rand", "rand_distr", "env_logger", "rustfft", "protocols/std", "utils/std", "protocols/spi",]
sim = []
spi = []
can = []
fdcan = []
traits_0_1 = [ "utils/traits_0_1",]
